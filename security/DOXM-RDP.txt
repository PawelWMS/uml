/*
@startuml
autonumber
title OIC Device Owner Establishment Sequence \n"Random PIN" Device Owner Transfer Method
participant "On-boarding Tool" as OT
participant "New Device" as ND

==Device Owner Transfer Method==
note over OT, ND
Find new devices that are unowned and choose the Random-PIN owner transfer method
end note
OT->ND: GET /oic/sec/doxm?Owned="FALSE"
ND->OT: RSP [{"OxmType":"oic.sec.doxm.rdp", "Oxm":"0", "Owned":"FALSE", "DidFormat":"0", "DeviceID":"uuid:0000-0000-0000-0000",...}]
OT->ND: POST /oic/sec/doxm [{... "OxmSel": "oic.sec.doxm.rdp", ...}]
ND->OT: RSP 2.04
OT->ND: GET /oic/sec/pstat
ND->OT: RSP [{"IsOp":"FALSE", "Cm":"bx0011,1110, "Tm":"bx0011,1110, "Om":"bx0000,0000", "Sm":"bx0000,0011"}]
note over OT, ND
On-boarding tool tells new device to allow client-directed provisioning.
end note
OT->ND: PUT /oic/sec/pstat [{...,"Om":"bx0000,0011", ...}]
ND->OT: RSP 2.04

==Perform oic.sec.doxm.rdp method==
OT->ND: ClientHello(TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256)
ND->OT: HelloVerifyRequest(cookie)
OT->ND: ClientHello(cookie)
ND->OT: ServerHello(); ServerKeyExchange(ECDH PublicKey + ECC Curve Param); ServerHelloDone()
note over OT, ND
Compute PSK following RFC2898; PSK = PBKDF2(PRF, PIN, NewDeviceID, c, DkLen)
end note
OT->ND: ClientKeyExchange(ECDH PublicKey); ChangeCipherSpec + Finish
ND->OT:	ChangeCipherSpec + Finish

==The secure session is used for the remainder of the owner transfer process==
note over OT, ND
This protocol follows the generic example transfer method - refer to the Example Owner Transfer Method.
end note

@enduml
*/